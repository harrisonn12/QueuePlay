global
    log stdout format raw local0
    maxconn 4096
    user haproxy
    group haproxy

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    retries 3
    timeout connect 5s
    timeout client  30s
    timeout server  30s
    timeout http-request 10s
    timeout http-keep-alive 10s
    timeout queue 30s
    timeout tunnel 1h  # Important for WebSockets

# Frontend for WebSocket connections
frontend websocket_frontend
    bind *:8081
    option tcplog
    mode http
    
    # WebSocket detection - allows both HTTP and WebSocket
    acl is_websocket hdr(Upgrade) -i WebSocket
    acl is_websocket hdr_beg(Host) -i ws
    
    # Health check endpoint
    acl is_health path_beg /health
    use_backend health_backend if is_health
    
    # Use websocket backend for all other traffic (default)
    default_backend websocket_backend

# Stats page frontend
frontend stats
    bind *:8080
    stats enable
    stats uri /
    stats refresh 10s
    stats admin if LOCALHOST

# Backend for WebSocket connections
backend websocket_backend
    mode http
    balance roundrobin
    option forwardfor
    
    # Enable WebSocket support
    option http-server-close
    
    # Stickiness ensures a client stays with the same server
    # This is important for WebSockets
    #cookie SERVERID insert indirect nocache
    
    # Health checking
    option httpchk GET /health
    http-check expect status 200
    
    # Server definitions with WebSocket support 
    # Using port 6790 for health checks on server1
    server server1 server1:6789 cookie server1 check port 6790 inter 30s rise 2 fall 3
    # Using port 6790 for health checks on server2
    server server2 server2:6789 cookie server2 check port 6790 inter 30s rise 2 fall 3
    
# Health check backend
backend health_backend
    mode http
    balance roundrobin
    option httpchk GET /health
    http-check expect status 200
    server server1_health server1:6790 check inter 30s
    server server2_health server2:6790 check inter 30s
